apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
    name: greeting-processor-rust-scaledjob
    namespace: default
spec:
    jobTargetRef:
        template:
            spec:
                containers:
                    -   name: greeting-processor-rust
                        image: arnecdn/greeting-processor-rust:0.13
                        imagePullPolicy: IfNotPresent

                        ports:
                            -   containerPort: 8090
                        env:

                            -   name: APP__KAFKA__BROKER
                                value: "kafka-service:9093"
                            -   name: APP__KAFKA__TOPIC
                                value: "greetings"
                            -   name: APP__KAFKA__CONSUMER_GROUP
                                value: "greeting_consumers"
                            -   name: APP__KAFKA__MESSAGE_TIMEOUT_MS
                                value: "3000"
                            -   name: APP__KAFKA__ENABLE_IDEMPOTENCE
                                value: "true"
                            -   name: APP__KAFKA__PROCESSING_GUARANTEE
                                value: "exactly_once"
                        command:
                            - "/usr/bin/server"
    pollingInterval: 5
    successfulJobsHistoryLimit: 10 # Number of successful jobs to keep
    failedJobsHistoryLimit: 10 # Number of failed jobs to keep
    maxReplicaCount: 100 # Maximum number of jobs that KEDA can create

    triggers:
        - type: kafka
          metadata:
              consumerGroup: "greeting_consumers"
              bootstrapServers: kafka-service.default.svc.cluster.local:9093
              topic: greetings
              lagThreshold: "10"
              offsetRestPolicy: latest