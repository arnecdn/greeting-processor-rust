apiVersion: apps/v1
kind: Deployment
metadata:
    name: greeting-processor-rust
spec:
    replicas: 0
    selector:
        matchLabels:
            app: greeting-processor-rust
    template:
        metadata:
            labels:
                app: greeting-processor-rust
        spec:
            containers:
                -   name: greeting-processor-rust
                    image: arnecdn/greeting-processor-rust:0.15
                    imagePullPolicy: IfNotPresent
                    resources:
                        requests:
                            memory: "8Mi"
                            cpu: "1m"
                        limits:
                            memory: "16Mi"
                    ports:
                        -   containerPort: 8090
                    env:

                        - name: APP__KAFKA__BROKER
                          value: "kafka-service:9093"
                        - name: APP__KAFKA__TOPIC
                          value: "greetings"
                        - name: APP__KAFKA__CONSUMER_GROUP
                          value: "greeting_consumers"
                        - name: APP__KAFKA__MESSAGE_TIMEOUT_MS
                          value: "3000"
                        - name: APP__KAFKA__ENABLE_IDEMPOTENCE
                          value: "true"
                        - name: APP__KAFKA__PROCESSING_GUARANTEE
                          value: "exactly_once"
                    command:
                              - "/usr/bin/server"
#                    command:
#                        - "tail -f /dev/null"



---
apiVersion: v1
kind: Service
metadata:
    name: greeting-processor-rust
spec:
    ports:
        - port: 8090
    selector:
        app: greeting-processor-rust

---
#apiVersion: keda.sh/v1alpha1
#kind: ScaledObject
#metadata:
#    name: greeting-processor-rust-scaledobject
#    namespace: default
#    labels:
#        deploymentName: greeting-processor-rust
#spec:
#    scaleTargetRef:
#        name: greeting-processor-rust
#    pollingInterval: 5
#    minReplicaCount: 0
#    maxReplicaCount: 10  # Max can go upto num of partitions you have in the topic
#    triggers:
#        - type: kafka
#          metadata:
#              consumerGroup: "greeting_consumers"
#              bootstrapServers: kafka-service.default.svc.cluster.local:9093
#              topic: greetings
#              lagThreshold: "10"
#              offsetRestPolicy: latest
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
    name: greeting-processor-rust-scaledobject
    namespace: default
    labels:
        deploymentName: greeting-processor-rust
spec:
    scaleTargetRef:
        name: greeting-processor-rust
    pollingInterval: 5
    minReplicaCount: 0
    maxReplicaCount: 10  # Max can go upto num of partitions you have in the topic
    triggers:
        - type: kafka
          metadata:
              consumerGroup: "greeting_consumers"
              bootstrapServers: kafka-service.default.svc.cluster.local:9093
              topic: greetings
              lagThreshold: "10"
              offsetRestPolicy: latest